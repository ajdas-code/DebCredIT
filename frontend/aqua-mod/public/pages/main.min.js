webpackJsonp([2],{

/***/ 168:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var FluxConstant = __webpack_require__(19);

module.exports = FluxConstant.set(['FORGOT', 'FORGOT_RESPONSE', 'GET_USER_CREDS', 'GET_USER_CREDS_RESPONSE', 'LOGIN', 'LOGIN_RESPONSE', 'LOGOUT', 'LOGOUT_RESPONSE', 'RESET', 'RESET_RESPONSE']);

/***/ }),

/***/ 182:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* global window */


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ApiActions = __webpack_require__(18);
var Constants = __webpack_require__(168);
var ForgotStore = __webpack_require__(280);
var LoginStore = __webpack_require__(281);
var LogoutStore = __webpack_require__(282);
var Qs = __webpack_require__(21);
var ResetStore = __webpack_require__(283);

var Actions = function () {
    function Actions() {
        _classCallCheck(this, Actions);
    }

    _createClass(Actions, null, [{
        key: 'forgot',
        value: function forgot(data) {

            ApiActions.post('/api/login/forgot', data, ForgotStore, Constants.FORGOT, Constants.FORGOT_RESPONSE);
        }
    }, {
        key: 'getUserCreds',
        value: function getUserCreds() {

            if (!global.window) {
                return;
            }

            ApiActions.get('/api/users/my', undefined, LoginStore, Constants.GET_USER_CREDS, Constants.GET_USER_CREDS_RESPONSE, function (err, response) {

                if (!err) {
                    var query = Qs.parse(window.location.search.substring(1));

                    if (query.returnUrl) {
                        window.location.href = query.returnUrl;
                    } else if (response && response.roles) {
                        if (response.roles.admin) {
                            window.location.href = '/admin';
                        } else {
                            window.location.href = '/account';
                        }
                    }
                }
            });
        }
    }, {
        key: 'login',
        value: function login(data) {

            ApiActions.post('/api/login', data, LoginStore, Constants.LOGIN, Constants.LOGIN_RESPONSE, function (err, response) {

                if (!err) {
                    var query = Qs.parse(window.location.search.substring(1));

                    if (query.returnUrl) {
                        window.location.href = query.returnUrl;
                    } else if (response && response.user) {
                        if (response.user.roles.admin) {
                            window.location.href = '/admin';
                        } else {
                            window.location.href = '/account';
                        }
                    }
                }
            });
        }
    }, {
        key: 'logout',
        value: function logout() {

            ApiActions.delete('/api/logout', undefined, LogoutStore, Constants.LOGOUT, Constants.LOGOUT_RESPONSE);
        }
    }, {
        key: 'reset',
        value: function reset(data) {

            ApiActions.post('/api/login/reset', data, ResetStore, Constants.RESET, Constants.RESET_RESPONSE);
        }
    }]);

    return Actions;
}();

module.exports = Actions;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(37)))

/***/ }),

/***/ 277:
/***/ (function(module, exports) {

exports.__esModule = true;
var ATTRIBUTE_NAMES = exports.ATTRIBUTE_NAMES = {
    BODY: "bodyAttributes",
    HTML: "htmlAttributes",
    TITLE: "titleAttributes"
};

var TAG_NAMES = exports.TAG_NAMES = {
    BASE: "base",
    BODY: "body",
    HEAD: "head",
    HTML: "html",
    LINK: "link",
    META: "meta",
    NOSCRIPT: "noscript",
    SCRIPT: "script",
    STYLE: "style",
    TITLE: "title"
};

var VALID_TAG_NAMES = exports.VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(function (name) {
    return TAG_NAMES[name];
});

var TAG_PROPERTIES = exports.TAG_PROPERTIES = {
    CHARSET: "charset",
    CSS_TEXT: "cssText",
    HREF: "href",
    HTTPEQUIV: "http-equiv",
    INNER_HTML: "innerHTML",
    ITEM_PROP: "itemprop",
    NAME: "name",
    PROPERTY: "property",
    REL: "rel",
    SRC: "src"
};

var REACT_TAG_MAP = exports.REACT_TAG_MAP = {
    accesskey: "accessKey",
    charset: "charSet",
    class: "className",
    contenteditable: "contentEditable",
    contextmenu: "contextMenu",
    "http-equiv": "httpEquiv",
    itemprop: "itemProp",
    tabindex: "tabIndex"
};

var HELMET_PROPS = exports.HELMET_PROPS = {
    DEFAULT_TITLE: "defaultTitle",
    DEFER: "defer",
    ENCODE_SPECIAL_CHARACTERS: "encodeSpecialCharacters",
    ON_CHANGE_CLIENT_STATE: "onChangeClientState",
    TITLE_TEMPLATE: "titleTemplate"
};

var HTML_TAG_MAP = exports.HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce(function (obj, key) {
    obj[REACT_TAG_MAP[key]] = key;
    return obj;
}, {});

var SELF_CLOSING_TAGS = exports.SELF_CLOSING_TAGS = [TAG_NAMES.NOSCRIPT, TAG_NAMES.SCRIPT, TAG_NAMES.STYLE];

var HELMET_ATTRIBUTE = exports.HELMET_ATTRIBUTE = "data-react-helmet";

/***/ }),

/***/ 278:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var FluxConstant = __webpack_require__(19);

module.exports = FluxConstant.set(['SEND_MESSAGE', 'SEND_MESSAGE_RESPONSE']);

/***/ }),

/***/ 279:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Constants = __webpack_require__(278);
var ObjectAssign = __webpack_require__(3);
var ParseValidation = __webpack_require__(6);
var Redux = __webpack_require__(16);

var initialState = {
    loading: false,
    success: false,
    error: undefined,
    hasError: {},
    help: {}
};
var reducer = function reducer(state, action) {

    if (action.type === Constants.SEND_MESSAGE) {
        return ObjectAssign({}, state, {
            loading: true
        });
    }

    if (action.type === Constants.SEND_MESSAGE_RESPONSE) {
        var validation = ParseValidation(action.response);

        return ObjectAssign({}, state, {
            loading: false,
            success: !action.err,
            error: validation.error,
            hasError: validation.hasError,
            help: validation.help
        });
    }

    return state;
};

module.exports = Redux.createStore(reducer, initialState);

/***/ }),

/***/ 28:
/***/ (function(module, exports, __webpack_require__) {

exports.__esModule = true;
exports.Helmet = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(2);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactSideEffect = __webpack_require__(523);

var _reactSideEffect2 = _interopRequireDefault(_reactSideEffect);

var _reactFastCompare = __webpack_require__(525);

var _reactFastCompare2 = _interopRequireDefault(_reactFastCompare);

var _HelmetUtils = __webpack_require__(526);

var _HelmetConstants = __webpack_require__(277);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Helmet = function Helmet(Component) {
    var _class, _temp;

    return _temp = _class = function (_React$Component) {
        _inherits(HelmetWrapper, _React$Component);

        function HelmetWrapper() {
            _classCallCheck(this, HelmetWrapper);

            return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
        }

        HelmetWrapper.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
            return !(0, _reactFastCompare2.default)(this.props, nextProps);
        };

        HelmetWrapper.prototype.mapNestedChildrenToProps = function mapNestedChildrenToProps(child, nestedChildren) {
            if (!nestedChildren) {
                return null;
            }

            switch (child.type) {
                case _HelmetConstants.TAG_NAMES.SCRIPT:
                case _HelmetConstants.TAG_NAMES.NOSCRIPT:
                    return {
                        innerHTML: nestedChildren
                    };

                case _HelmetConstants.TAG_NAMES.STYLE:
                    return {
                        cssText: nestedChildren
                    };
            }

            throw new Error("<" + child.type + " /> elements are self-closing and can not contain children. Refer to our API for more information.");
        };

        HelmetWrapper.prototype.flattenArrayTypeChildren = function flattenArrayTypeChildren(_ref) {
            var _extends2;

            var child = _ref.child,
                arrayTypeChildren = _ref.arrayTypeChildren,
                newChildProps = _ref.newChildProps,
                nestedChildren = _ref.nestedChildren;

            return _extends({}, arrayTypeChildren, (_extends2 = {}, _extends2[child.type] = [].concat(arrayTypeChildren[child.type] || [], [_extends({}, newChildProps, this.mapNestedChildrenToProps(child, nestedChildren))]), _extends2));
        };

        HelmetWrapper.prototype.mapObjectTypeChildren = function mapObjectTypeChildren(_ref2) {
            var _extends3, _extends4;

            var child = _ref2.child,
                newProps = _ref2.newProps,
                newChildProps = _ref2.newChildProps,
                nestedChildren = _ref2.nestedChildren;

            switch (child.type) {
                case _HelmetConstants.TAG_NAMES.TITLE:
                    return _extends({}, newProps, (_extends3 = {}, _extends3[child.type] = nestedChildren, _extends3.titleAttributes = _extends({}, newChildProps), _extends3));

                case _HelmetConstants.TAG_NAMES.BODY:
                    return _extends({}, newProps, {
                        bodyAttributes: _extends({}, newChildProps)
                    });

                case _HelmetConstants.TAG_NAMES.HTML:
                    return _extends({}, newProps, {
                        htmlAttributes: _extends({}, newChildProps)
                    });
            }

            return _extends({}, newProps, (_extends4 = {}, _extends4[child.type] = _extends({}, newChildProps), _extends4));
        };

        HelmetWrapper.prototype.mapArrayTypeChildrenToProps = function mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {
            var newFlattenedProps = _extends({}, newProps);

            Object.keys(arrayTypeChildren).forEach(function (arrayChildName) {
                var _extends5;

                newFlattenedProps = _extends({}, newFlattenedProps, (_extends5 = {}, _extends5[arrayChildName] = arrayTypeChildren[arrayChildName], _extends5));
            });

            return newFlattenedProps;
        };

        HelmetWrapper.prototype.warnOnInvalidChildren = function warnOnInvalidChildren(child, nestedChildren) {
            if (true) {
                if (!_HelmetConstants.VALID_TAG_NAMES.some(function (name) {
                    return child.type === name;
                })) {
                    if (typeof child.type === "function") {
                        return (0, _HelmetUtils.warn)("You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.");
                    }

                    return (0, _HelmetUtils.warn)("Only elements types " + _HelmetConstants.VALID_TAG_NAMES.join(", ") + " are allowed. Helmet does not support rendering <" + child.type + "> elements. Refer to our API for more information.");
                }

                if (nestedChildren && typeof nestedChildren !== "string" && (!Array.isArray(nestedChildren) || nestedChildren.some(function (nestedChild) {
                    return typeof nestedChild !== "string";
                }))) {
                    throw new Error("Helmet expects a string as a child of <" + child.type + ">. Did you forget to wrap your children in braces? ( <" + child.type + ">{``}</" + child.type + "> ) Refer to our API for more information.");
                }
            }

            return true;
        };

        HelmetWrapper.prototype.mapChildrenToProps = function mapChildrenToProps(children, newProps) {
            var _this2 = this;

            var arrayTypeChildren = {};

            _react2.default.Children.forEach(children, function (child) {
                if (!child || !child.props) {
                    return;
                }

                var _child$props = child.props,
                    nestedChildren = _child$props.children,
                    childProps = _objectWithoutProperties(_child$props, ["children"]);

                var newChildProps = (0, _HelmetUtils.convertReactPropstoHtmlAttributes)(childProps);

                _this2.warnOnInvalidChildren(child, nestedChildren);

                switch (child.type) {
                    case _HelmetConstants.TAG_NAMES.LINK:
                    case _HelmetConstants.TAG_NAMES.META:
                    case _HelmetConstants.TAG_NAMES.NOSCRIPT:
                    case _HelmetConstants.TAG_NAMES.SCRIPT:
                    case _HelmetConstants.TAG_NAMES.STYLE:
                        arrayTypeChildren = _this2.flattenArrayTypeChildren({
                            child: child,
                            arrayTypeChildren: arrayTypeChildren,
                            newChildProps: newChildProps,
                            nestedChildren: nestedChildren
                        });
                        break;

                    default:
                        newProps = _this2.mapObjectTypeChildren({
                            child: child,
                            newProps: newProps,
                            newChildProps: newChildProps,
                            nestedChildren: nestedChildren
                        });
                        break;
                }
            });

            newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);
            return newProps;
        };

        HelmetWrapper.prototype.render = function render() {
            var _props = this.props,
                children = _props.children,
                props = _objectWithoutProperties(_props, ["children"]);

            var newProps = _extends({}, props);

            if (children) {
                newProps = this.mapChildrenToProps(children, newProps);
            }

            return _react2.default.createElement(Component, newProps);
        };

        _createClass(HelmetWrapper, null, [{
            key: "canUseDOM",


            // Component.peek comes from react-side-effect:
            // For testing, you may use a static peek() method available on the returned component.
            // It lets you get the current state without resetting the mounted instance stack.
            // Don’t use it for anything other than testing.

            /**
             * @param {Object} base: {"target": "_blank", "href": "http://mysite.com/"}
             * @param {Object} bodyAttributes: {"className": "root"}
             * @param {String} defaultTitle: "Default Title"
             * @param {Boolean} defer: true
             * @param {Boolean} encodeSpecialCharacters: true
             * @param {Object} htmlAttributes: {"lang": "en", "amp": undefined}
             * @param {Array} link: [{"rel": "canonical", "href": "http://mysite.com/example"}]
             * @param {Array} meta: [{"name": "description", "content": "Test description"}]
             * @param {Array} noscript: [{"innerHTML": "<img src='http://mysite.com/js/test.js'"}]
             * @param {Function} onChangeClientState: "(newState) => console.log(newState)"
             * @param {Array} script: [{"type": "text/javascript", "src": "http://mysite.com/js/test.js"}]
             * @param {Array} style: [{"type": "text/css", "cssText": "div { display: block; color: blue; }"}]
             * @param {String} title: "Title"
             * @param {Object} titleAttributes: {"itemprop": "name"}
             * @param {String} titleTemplate: "MySite.com - %s"
             */
            set: function set(canUseDOM) {
                Component.canUseDOM = canUseDOM;
            }
        }]);

        return HelmetWrapper;
    }(_react2.default.Component), _class.propTypes = {
        base: _propTypes2.default.object,
        bodyAttributes: _propTypes2.default.object,
        children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
        defaultTitle: _propTypes2.default.string,
        defer: _propTypes2.default.bool,
        encodeSpecialCharacters: _propTypes2.default.bool,
        htmlAttributes: _propTypes2.default.object,
        link: _propTypes2.default.arrayOf(_propTypes2.default.object),
        meta: _propTypes2.default.arrayOf(_propTypes2.default.object),
        noscript: _propTypes2.default.arrayOf(_propTypes2.default.object),
        onChangeClientState: _propTypes2.default.func,
        script: _propTypes2.default.arrayOf(_propTypes2.default.object),
        style: _propTypes2.default.arrayOf(_propTypes2.default.object),
        title: _propTypes2.default.string,
        titleAttributes: _propTypes2.default.object,
        titleTemplate: _propTypes2.default.string
    }, _class.defaultProps = {
        defer: true,
        encodeSpecialCharacters: true
    }, _class.peek = Component.peek, _class.rewind = function () {
        var mappedState = Component.rewind();
        if (!mappedState) {
            // provide fallback if mappedState is undefined
            mappedState = (0, _HelmetUtils.mapStateOnServer)({
                baseTag: [],
                bodyAttributes: {},
                encodeSpecialCharacters: true,
                htmlAttributes: {},
                linkTags: [],
                metaTags: [],
                noscriptTags: [],
                scriptTags: [],
                styleTags: [],
                title: "",
                titleAttributes: {}
            });
        }

        return mappedState;
    }, _temp;
};

var NullComponent = function NullComponent() {
    return null;
};

var HelmetSideEffects = (0, _reactSideEffect2.default)(_HelmetUtils.reducePropsToState, _HelmetUtils.handleClientStateChange, _HelmetUtils.mapStateOnServer)(NullComponent);

var HelmetExport = Helmet(HelmetSideEffects);
HelmetExport.renderStatic = HelmetExport.rewind;

exports.Helmet = HelmetExport;
exports.default = HelmetExport;

/***/ }),

/***/ 280:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Constants = __webpack_require__(168);
var ObjectAssign = __webpack_require__(3);
var ParseValidation = __webpack_require__(6);
var Redux = __webpack_require__(16);

var initialState = {
    loading: false,
    success: false,
    error: undefined,
    hasError: {},
    help: {}
};
var reducer = function reducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];


    if (action.type === Constants.FORGOT) {
        return ObjectAssign({}, state, {
            loading: true
        });
    }

    if (action.type === Constants.FORGOT_RESPONSE) {
        var validation = ParseValidation(action.response);

        return ObjectAssign({}, state, {
            loading: false,
            success: !action.err,
            error: validation.error,
            hasError: validation.hasError,
            help: validation.help
        });
    }

    return state;
};

module.exports = Redux.createStore(reducer);

/***/ }),

/***/ 281:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Constants = __webpack_require__(168);
var ObjectAssign = __webpack_require__(3);
var ParseValidation = __webpack_require__(6);
var Redux = __webpack_require__(16);

var initialState = {
    loading: false,
    success: false,
    error: undefined,
    hasError: {},
    help: {}
};
var reducer = function reducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];


    if (action.type === Constants.LOGIN) {
        return ObjectAssign({}, state, {
            loading: true
        });
    }

    if (action.type === Constants.LOGIN_RESPONSE) {
        var validation = ParseValidation(action.response);

        return ObjectAssign({}, state, {
            loading: false,
            success: !action.err,
            error: validation.error,
            hasError: validation.hasError,
            help: validation.help
        });
    }

    return state;
};

module.exports = Redux.createStore(reducer);

/***/ }),

/***/ 282:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Constants = __webpack_require__(168);
var ObjectAssign = __webpack_require__(3);
var ParseValidation = __webpack_require__(6);
var Redux = __webpack_require__(16);

var initialState = {
    loading: false,
    success: false,
    error: undefined,
    hasError: {},
    help: {}
};
var reducer = function reducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];


    if (action.type === Constants.LOGOUT) {
        return ObjectAssign({}, state, {
            loading: true
        });
    }

    if (action.type === Constants.LOGOUT_RESPONSE) {
        var validation = ParseValidation(action.response);

        return ObjectAssign({}, state, {
            loading: false,
            success: !action.err,
            error: validation.error,
            hasError: validation.hasError,
            help: validation.help
        });
    }

    return state;
};

module.exports = Redux.createStore(reducer);

/***/ }),

/***/ 283:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Constants = __webpack_require__(168);
var ObjectAssign = __webpack_require__(3);
var ParseValidation = __webpack_require__(6);
var Redux = __webpack_require__(16);

var initialState = {
    loading: false,
    success: false,
    error: undefined,
    hasError: {},
    help: {}
};
var reducer = function reducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];


    if (action.type === Constants.RESET) {
        return ObjectAssign({}, state, {
            loading: true
        });
    }

    if (action.type === Constants.RESET_RESPONSE) {
        var validation = ParseValidation(action.response);

        return ObjectAssign({}, state, {
            loading: false,
            success: !action.err,
            error: validation.error,
            hasError: validation.hasError,
            help: validation.help
        });
    }

    return state;
};

module.exports = Redux.createStore(reducer);

/***/ }),

/***/ 284:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var FluxConstant = __webpack_require__(19);

module.exports = FluxConstant.set(['REGISTER', 'REGISTER_RESPONSE']);

/***/ }),

/***/ 285:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Constants = __webpack_require__(284);
var ObjectAssign = __webpack_require__(3);
var ParseValidation = __webpack_require__(6);
var Redux = __webpack_require__(16);

var initialState = {
    loading: false,
    success: false,
    error: undefined,
    hasError: {},
    help: {}
};
var reducer = function reducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
    var action = arguments[1];


    if (action.type === Constants.REGISTER) {
        return ObjectAssign({}, state, {
            loading: true
        });
    }

    if (action.type === Constants.REGISTER_RESPONSE) {
        var validation = ParseValidation(action.response);

        return ObjectAssign({}, state, {
            loading: false,
            success: !action.err,
            error: validation.error,
            hasError: validation.hasError,
            help: validation.help
        });
    }

    return state;
};

module.exports = Redux.createStore(reducer);

/***/ }),

/***/ 519:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {/* global window */


var App = __webpack_require__(520);
var ReactDOM = __webpack_require__(188);

var Page = {
    blastoff: function blastoff() {

        this.mainElement = ReactDOM.render(App, window.document.getElementById('app-mount'));
    }
};

module.exports = Page;

/* $lab:coverage:off$ */
if (!module.parent) {
    window.page = Page;
    Page.blastoff();
}
/* $lab:coverage:on$ */
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(43)(module)))

/***/ }),

/***/ 520:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var React = __webpack_require__(1);
var ReactRouter = __webpack_require__(7);
var AppUniversal = __webpack_require__(521);

var BrowserRouter = ReactRouter.BrowserRouter;

var App = React.createElement(
    BrowserRouter,
    null,
    React.createElement(AppUniversal, null)
);

module.exports = App;

/***/ }),

/***/ 521:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var About = __webpack_require__(522);
var Contact = __webpack_require__(527);
var Footer = __webpack_require__(531);
var Home = __webpack_require__(532);
var Login = __webpack_require__(533);
var LoginForgot = __webpack_require__(534);
var LoginLogout = __webpack_require__(535);
var LoginReset = __webpack_require__(536);
var Navbar = __webpack_require__(537);
var NotFound = __webpack_require__(538);
var React = __webpack_require__(1);
var ReactRouter = __webpack_require__(7);
var RouteRedirect = __webpack_require__(540);
var Signup = __webpack_require__(541);

var Route = ReactRouter.Route;
var Switch = ReactRouter.Switch;

var AppUniversal = function AppUniversal() {

    return React.createElement(
        'div',
        null,
        React.createElement(Route, { component: Navbar }),
        React.createElement(
            Switch,
            null,
            React.createElement(Route, { path: '/', exact: true, component: Home }),
            React.createElement(Route, { path: '/about', exact: true, component: About }),
            React.createElement(Route, { path: '/contact', exact: true, component: Contact }),
            React.createElement(Route, { path: '/login', exact: true, component: Login }),
            React.createElement(Route, { path: '/login/forgot', exact: true, component: LoginForgot }),
            React.createElement(Route, { path: '/login/reset/:email/:key', component: LoginReset }),
            React.createElement(Route, { path: '/login/logout', exact: true, component: LoginLogout }),
            React.createElement(Route, { path: '/signup', exact: true, component: Signup }),
            React.createElement(RouteRedirect, { from: '/moved', to: '/', code: 301 }),
            React.createElement(Route, { component: NotFound })
        ),
        React.createElement(Footer, null)
    );
};

module.exports = AppUniversal;

/***/ }),

/***/ 522:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = __webpack_require__(1);
var ReactHelmet = __webpack_require__(28);

var Helmet = ReactHelmet.Helmet;

var AboutPage = function (_React$Component) {
    _inherits(AboutPage, _React$Component);

    function AboutPage() {
        _classCallCheck(this, AboutPage);

        return _possibleConstructorReturn(this, (AboutPage.__proto__ || Object.getPrototypeOf(AboutPage)).apply(this, arguments));
    }

    _createClass(AboutPage, [{
        key: 'render',
        value: function render() {

            return React.createElement(
                'section',
                { className: 'section-about container' },
                React.createElement(
                    Helmet,
                    null,
                    React.createElement(
                        'title',
                        null,
                        'About us'
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'row' },
                    React.createElement(
                        'div',
                        { className: 'col-sm-6' },
                        React.createElement(
                            'h1',
                            { className: 'page-header' },
                            'About us'
                        ),
                        React.createElement(
                            'div',
                            { className: 'media' },
                            React.createElement(
                                'div',
                                { className: 'pull-left' },
                                React.createElement(
                                    'div',
                                    { className: 'media-object' },
                                    React.createElement('i', { className: 'fa fa-camera-retro fa-4x' })
                                )
                            ),
                            React.createElement(
                                'div',
                                { className: 'media-body' },
                                React.createElement(
                                    'h4',
                                    { className: 'media-heading' },
                                    'Leo Damon'
                                ),
                                React.createElement(
                                    'p',
                                    null,
                                    'Pork belly salvia tilde chia freegan four loko. Fingerstache microdosing succulents VHS venmo green juice wolf leggings hoodie shabby chic direct trade flannel.'
                                )
                            )
                        ),
                        React.createElement('hr', null),
                        React.createElement(
                            'div',
                            { className: 'media' },
                            React.createElement(
                                'div',
                                { className: 'pull-left' },
                                React.createElement(
                                    'div',
                                    { className: 'media-object' },
                                    React.createElement('i', { className: 'fa fa-camera-retro fa-4x' })
                                )
                            ),
                            React.createElement(
                                'div',
                                { className: 'media-body' },
                                React.createElement(
                                    'h4',
                                    { className: 'media-heading' },
                                    'Mathew DiCaprio'
                                ),
                                React.createElement(
                                    'p',
                                    null,
                                    'Seitan cloud bread messenger bag small batch. Green juice 90s banjo activated charcoal wolf. Subway tile scenester shoreditch, quinoa edison bulb kogi microdosing cliche DIY tumeric meh.'
                                )
                            )
                        ),
                        React.createElement('hr', null),
                        React.createElement(
                            'div',
                            { className: 'media' },
                            React.createElement(
                                'div',
                                { className: 'pull-left' },
                                React.createElement(
                                    'div',
                                    { className: 'media-object' },
                                    React.createElement('i', { className: 'fa fa-camera-retro fa-4x' })
                                )
                            ),
                            React.createElement(
                                'div',
                                { className: 'media-body' },
                                React.createElement(
                                    'h4',
                                    { className: 'media-heading' },
                                    'Nick Jackson'
                                ),
                                React.createElement(
                                    'p',
                                    null,
                                    'Salvia man braid four dollar toast chicharrones, selvage hell of selfies. Try-hard crucifix cray freegan, viral fingerstache aesthetic. Cronut butcher irony brooklyn kitsch thundercats.'
                                )
                            )
                        )
                    ),
                    React.createElement(
                        'div',
                        { className: 'col-sm-6 text-center' },
                        React.createElement(
                            'h1',
                            { className: 'page-header' },
                            'Prestige worldwide'
                        ),
                        React.createElement(
                            'p',
                            { className: 'lead' },
                            'The first name in entertainment.'
                        ),
                        React.createElement('i', { className: 'fa fa-volume-up bamf' })
                    )
                )
            );
        }
    }]);

    return AboutPage;
}(React.Component);

module.exports = AboutPage;

/***/ }),

/***/ 523:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = __webpack_require__(1);
var React__default = _interopDefault(React);
var shallowEqual = _interopDefault(__webpack_require__(524));

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
function withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {
  if (typeof reducePropsToState !== 'function') {
    throw new Error('Expected reducePropsToState to be a function.');
  }

  if (typeof handleStateChangeOnClient !== 'function') {
    throw new Error('Expected handleStateChangeOnClient to be a function.');
  }

  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {
    throw new Error('Expected mapStateOnServer to either be undefined or a function.');
  }

  function getDisplayName(WrappedComponent) {
    return WrappedComponent.displayName || WrappedComponent.name || 'Component';
  }

  return function wrap(WrappedComponent) {
    if (typeof WrappedComponent !== 'function') {
      throw new Error('Expected WrappedComponent to be a React component.');
    }

    var mountedInstances = [];
    var state;

    function emitChange() {
      state = reducePropsToState(mountedInstances.map(function (instance) {
        return instance.props;
      }));

      if (SideEffect.canUseDOM) {
        handleStateChangeOnClient(state);
      } else if (mapStateOnServer) {
        state = mapStateOnServer(state);
      }
    }

    var SideEffect =
    /*#__PURE__*/
    function (_Component) {
      _inheritsLoose(SideEffect, _Component);

      function SideEffect() {
        return _Component.apply(this, arguments) || this;
      }

      // Try to use displayName of wrapped component
      // Expose canUseDOM so tests can monkeypatch it
      SideEffect.peek = function peek() {
        return state;
      };

      SideEffect.rewind = function rewind() {
        if (SideEffect.canUseDOM) {
          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');
        }

        var recordedState = state;
        state = undefined;
        mountedInstances = [];
        return recordedState;
      };

      var _proto = SideEffect.prototype;

      _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
        return !shallowEqual(nextProps, this.props);
      };

      _proto.componentWillMount = function componentWillMount() {
        mountedInstances.push(this);
        emitChange();
      };

      _proto.componentDidUpdate = function componentDidUpdate() {
        emitChange();
      };

      _proto.componentWillUnmount = function componentWillUnmount() {
        var index = mountedInstances.indexOf(this);
        mountedInstances.splice(index, 1);
        emitChange();
      };

      _proto.render = function render() {
        return React__default.createElement(WrappedComponent, this.props);
      };

      return SideEffect;
    }(React.Component);

    _defineProperty(SideEffect, "displayName", "SideEffect(" + getDisplayName(WrappedComponent) + ")");

    _defineProperty(SideEffect, "canUseDOM", canUseDOM);

    return SideEffect;
  };
}

module.exports = withSideEffect;


/***/ }),

/***/ 524:
/***/ (function(module, exports) {

//

module.exports = function shallowEqual(objA, objB, compare, compareContext) {
  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;

  if (ret !== void 0) {
    return !!ret;
  }

  if (objA === objB) {
    return true;
  }

  if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);

  // Test for A's keys different from B.
  for (var idx = 0; idx < keysA.length; idx++) {
    var key = keysA[idx];

    if (!bHasOwnProperty(key)) {
      return false;
    }

    var valueA = objA[key];
    var valueB = objB[key];

    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;

    if (ret === false || (ret === void 0 && valueA !== valueB)) {
      return false;
    }
  }

  return true;
};


/***/ }),

/***/ 525:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isArray = Array.isArray;
var keyList = Object.keys;
var hasProp = Object.prototype.hasOwnProperty;
var hasElementType = typeof Element !== 'undefined';

function equal(a, b) {
  // fast-deep-equal index.js 2.0.1
  if (a === b) return true;

  if (a && b && typeof a == 'object' && typeof b == 'object') {
    var arrA = isArray(a)
      , arrB = isArray(b)
      , i
      , length
      , key;

    if (arrA && arrB) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;)
        if (!equal(a[i], b[i])) return false;
      return true;
    }

    if (arrA != arrB) return false;

    var dateA = a instanceof Date
      , dateB = b instanceof Date;
    if (dateA != dateB) return false;
    if (dateA && dateB) return a.getTime() == b.getTime();

    var regexpA = a instanceof RegExp
      , regexpB = b instanceof RegExp;
    if (regexpA != regexpB) return false;
    if (regexpA && regexpB) return a.toString() == b.toString();

    var keys = keyList(a);
    length = keys.length;

    if (length !== keyList(b).length)
      return false;

    for (i = length; i-- !== 0;)
      if (!hasProp.call(b, keys[i])) return false;
    // end fast-deep-equal

    // start react-fast-compare
    // custom handling for DOM elements
    if (hasElementType && a instanceof Element && b instanceof Element)
      return a === b;

    // custom handling for React
    for (i = length; i-- !== 0;) {
      key = keys[i];
      if (key === '_owner' && a.$$typeof) {
        // React-specific: avoid traversing React elements' _owner.
        //  _owner contains circular references
        // and is not needed when comparing the actual elements (and not their owners)
        // .$$typeof and ._store on just reasonable markers of a react element
        continue;
      } else {
        // all other properties should be traversed as usual
        if (!equal(a[key], b[key])) return false;
      }
    }
    // end react-fast-compare

    // fast-deep-equal index.js 2.0.1
    return true;
  }

  return a !== a && b !== b;
}
// end fast-deep-equal

module.exports = function exportedEqual(a, b) {
  try {
    return equal(a, b);
  } catch (error) {
    if ((error.message && error.message.match(/stack|recursion/i)) || (error.number === -2146828260)) {
      // warn on circular references, don't crash
      // browsers give this different errors name and messages:
      // chrome/safari: "RangeError", "Maximum call stack size exceeded"
      // firefox: "InternalError", too much recursion"
      // edge: "Error", "Out of stack space"
      console.warn('Warning: react-fast-compare does not handle circular references.', error.name, error.message);
      return false;
    }
    // some other error. we should definitely know about these
    throw error;
  }
};


/***/ }),

/***/ 526:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {exports.__esModule = true;
exports.warn = exports.requestAnimationFrame = exports.reducePropsToState = exports.mapStateOnServer = exports.handleClientStateChange = exports.convertReactPropstoHtmlAttributes = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _objectAssign = __webpack_require__(3);

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _HelmetConstants = __webpack_require__(277);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var encodeSpecialCharacters = function encodeSpecialCharacters(str) {
    var encode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

    if (encode === false) {
        return String(str);
    }

    return String(str).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;");
};

var getTitleFromPropsList = function getTitleFromPropsList(propsList) {
    var innermostTitle = getInnermostProperty(propsList, _HelmetConstants.TAG_NAMES.TITLE);
    var innermostTemplate = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.TITLE_TEMPLATE);

    if (innermostTemplate && innermostTitle) {
        // use function arg to avoid need to escape $ characters
        return innermostTemplate.replace(/%s/g, function () {
            return innermostTitle;
        });
    }

    var innermostDefaultTitle = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFAULT_TITLE);

    return innermostTitle || innermostDefaultTitle || undefined;
};

var getOnChangeClientState = function getOnChangeClientState(propsList) {
    return getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || function () {};
};

var getAttributesFromPropsList = function getAttributesFromPropsList(tagType, propsList) {
    return propsList.filter(function (props) {
        return typeof props[tagType] !== "undefined";
    }).map(function (props) {
        return props[tagType];
    }).reduce(function (tagAttrs, current) {
        return _extends({}, tagAttrs, current);
    }, {});
};

var getBaseTagFromPropsList = function getBaseTagFromPropsList(primaryAttributes, propsList) {
    return propsList.filter(function (props) {
        return typeof props[_HelmetConstants.TAG_NAMES.BASE] !== "undefined";
    }).map(function (props) {
        return props[_HelmetConstants.TAG_NAMES.BASE];
    }).reverse().reduce(function (innermostBaseTag, tag) {
        if (!innermostBaseTag.length) {
            var keys = Object.keys(tag);

            for (var i = 0; i < keys.length; i++) {
                var attributeKey = keys[i];
                var lowerCaseAttributeKey = attributeKey.toLowerCase();

                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {
                    return innermostBaseTag.concat(tag);
                }
            }
        }

        return innermostBaseTag;
    }, []);
};

var getTagsFromPropsList = function getTagsFromPropsList(tagName, primaryAttributes, propsList) {
    // Calculate list of tags, giving priority innermost component (end of the propslist)
    var approvedSeenTags = {};

    return propsList.filter(function (props) {
        if (Array.isArray(props[tagName])) {
            return true;
        }
        if (typeof props[tagName] !== "undefined") {
            warn("Helmet: " + tagName + " should be of type \"Array\". Instead found type \"" + _typeof(props[tagName]) + "\"");
        }
        return false;
    }).map(function (props) {
        return props[tagName];
    }).reverse().reduce(function (approvedTags, instanceTags) {
        var instanceSeenTags = {};

        instanceTags.filter(function (tag) {
            var primaryAttributeKey = void 0;
            var keys = Object.keys(tag);
            for (var i = 0; i < keys.length; i++) {
                var attributeKey = keys[i];
                var lowerCaseAttributeKey = attributeKey.toLowerCase();

                // Special rule with link tags, since rel and href are both primary tags, rel takes priority
                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[primaryAttributeKey].toLowerCase() === "canonical") && !(lowerCaseAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[lowerCaseAttributeKey].toLowerCase() === "stylesheet")) {
                    primaryAttributeKey = lowerCaseAttributeKey;
                }
                // Special case for innerHTML which doesn't work lowercased
                if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attributeKey === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT || attributeKey === _HelmetConstants.TAG_PROPERTIES.ITEM_PROP)) {
                    primaryAttributeKey = attributeKey;
                }
            }

            if (!primaryAttributeKey || !tag[primaryAttributeKey]) {
                return false;
            }

            var value = tag[primaryAttributeKey].toLowerCase();

            if (!approvedSeenTags[primaryAttributeKey]) {
                approvedSeenTags[primaryAttributeKey] = {};
            }

            if (!instanceSeenTags[primaryAttributeKey]) {
                instanceSeenTags[primaryAttributeKey] = {};
            }

            if (!approvedSeenTags[primaryAttributeKey][value]) {
                instanceSeenTags[primaryAttributeKey][value] = true;
                return true;
            }

            return false;
        }).reverse().forEach(function (tag) {
            return approvedTags.push(tag);
        });

        // Update seen tags with tags from this instance
        var keys = Object.keys(instanceSeenTags);
        for (var i = 0; i < keys.length; i++) {
            var attributeKey = keys[i];
            var tagUnion = (0, _objectAssign2.default)({}, approvedSeenTags[attributeKey], instanceSeenTags[attributeKey]);

            approvedSeenTags[attributeKey] = tagUnion;
        }

        return approvedTags;
    }, []).reverse();
};

var getInnermostProperty = function getInnermostProperty(propsList, property) {
    for (var i = propsList.length - 1; i >= 0; i--) {
        var props = propsList[i];

        if (props.hasOwnProperty(property)) {
            return props[property];
        }
    }

    return null;
};

var reducePropsToState = function reducePropsToState(propsList) {
    return {
        baseTag: getBaseTagFromPropsList([_HelmetConstants.TAG_PROPERTIES.HREF], propsList),
        bodyAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.BODY, propsList),
        defer: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFER),
        encode: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),
        htmlAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.HTML, propsList),
        linkTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.LINK, [_HelmetConstants.TAG_PROPERTIES.REL, _HelmetConstants.TAG_PROPERTIES.HREF], propsList),
        metaTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.META, [_HelmetConstants.TAG_PROPERTIES.NAME, _HelmetConstants.TAG_PROPERTIES.CHARSET, _HelmetConstants.TAG_PROPERTIES.HTTPEQUIV, _HelmetConstants.TAG_PROPERTIES.PROPERTY, _HelmetConstants.TAG_PROPERTIES.ITEM_PROP], propsList),
        noscriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.NOSCRIPT, [_HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),
        onChangeClientState: getOnChangeClientState(propsList),
        scriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.SCRIPT, [_HelmetConstants.TAG_PROPERTIES.SRC, _HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),
        styleTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.STYLE, [_HelmetConstants.TAG_PROPERTIES.CSS_TEXT], propsList),
        title: getTitleFromPropsList(propsList),
        titleAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.TITLE, propsList)
    };
};

var rafPolyfill = function () {
    var clock = Date.now();

    return function (callback) {
        var currentTime = Date.now();

        if (currentTime - clock > 16) {
            clock = currentTime;
            callback(currentTime);
        } else {
            setTimeout(function () {
                rafPolyfill(callback);
            }, 0);
        }
    };
}();

var cafPolyfill = function cafPolyfill(id) {
    return clearTimeout(id);
};

var requestAnimationFrame = typeof window !== "undefined" ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || rafPolyfill : global.requestAnimationFrame || rafPolyfill;

var cancelAnimationFrame = typeof window !== "undefined" ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || cafPolyfill : global.cancelAnimationFrame || cafPolyfill;

var warn = function warn(msg) {
    return console && typeof console.warn === "function" && console.warn(msg);
};

var _helmetCallback = null;

var handleClientStateChange = function handleClientStateChange(newState) {
    if (_helmetCallback) {
        cancelAnimationFrame(_helmetCallback);
    }

    if (newState.defer) {
        _helmetCallback = requestAnimationFrame(function () {
            commitTagChanges(newState, function () {
                _helmetCallback = null;
            });
        });
    } else {
        commitTagChanges(newState);
        _helmetCallback = null;
    }
};

var commitTagChanges = function commitTagChanges(newState, cb) {
    var baseTag = newState.baseTag,
        bodyAttributes = newState.bodyAttributes,
        htmlAttributes = newState.htmlAttributes,
        linkTags = newState.linkTags,
        metaTags = newState.metaTags,
        noscriptTags = newState.noscriptTags,
        onChangeClientState = newState.onChangeClientState,
        scriptTags = newState.scriptTags,
        styleTags = newState.styleTags,
        title = newState.title,
        titleAttributes = newState.titleAttributes;

    updateAttributes(_HelmetConstants.TAG_NAMES.BODY, bodyAttributes);
    updateAttributes(_HelmetConstants.TAG_NAMES.HTML, htmlAttributes);

    updateTitle(title, titleAttributes);

    var tagUpdates = {
        baseTag: updateTags(_HelmetConstants.TAG_NAMES.BASE, baseTag),
        linkTags: updateTags(_HelmetConstants.TAG_NAMES.LINK, linkTags),
        metaTags: updateTags(_HelmetConstants.TAG_NAMES.META, metaTags),
        noscriptTags: updateTags(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags),
        scriptTags: updateTags(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags),
        styleTags: updateTags(_HelmetConstants.TAG_NAMES.STYLE, styleTags)
    };

    var addedTags = {};
    var removedTags = {};

    Object.keys(tagUpdates).forEach(function (tagType) {
        var _tagUpdates$tagType = tagUpdates[tagType],
            newTags = _tagUpdates$tagType.newTags,
            oldTags = _tagUpdates$tagType.oldTags;


        if (newTags.length) {
            addedTags[tagType] = newTags;
        }
        if (oldTags.length) {
            removedTags[tagType] = tagUpdates[tagType].oldTags;
        }
    });

    cb && cb();

    onChangeClientState(newState, addedTags, removedTags);
};

var flattenArray = function flattenArray(possibleArray) {
    return Array.isArray(possibleArray) ? possibleArray.join("") : possibleArray;
};

var updateTitle = function updateTitle(title, attributes) {
    if (typeof title !== "undefined" && document.title !== title) {
        document.title = flattenArray(title);
    }

    updateAttributes(_HelmetConstants.TAG_NAMES.TITLE, attributes);
};

var updateAttributes = function updateAttributes(tagName, attributes) {
    var elementTag = document.getElementsByTagName(tagName)[0];

    if (!elementTag) {
        return;
    }

    var helmetAttributeString = elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE);
    var helmetAttributes = helmetAttributeString ? helmetAttributeString.split(",") : [];
    var attributesToRemove = [].concat(helmetAttributes);
    var attributeKeys = Object.keys(attributes);

    for (var i = 0; i < attributeKeys.length; i++) {
        var attribute = attributeKeys[i];
        var value = attributes[attribute] || "";

        if (elementTag.getAttribute(attribute) !== value) {
            elementTag.setAttribute(attribute, value);
        }

        if (helmetAttributes.indexOf(attribute) === -1) {
            helmetAttributes.push(attribute);
        }

        var indexToSave = attributesToRemove.indexOf(attribute);
        if (indexToSave !== -1) {
            attributesToRemove.splice(indexToSave, 1);
        }
    }

    for (var _i = attributesToRemove.length - 1; _i >= 0; _i--) {
        elementTag.removeAttribute(attributesToRemove[_i]);
    }

    if (helmetAttributes.length === attributesToRemove.length) {
        elementTag.removeAttribute(_HelmetConstants.HELMET_ATTRIBUTE);
    } else if (elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE) !== attributeKeys.join(",")) {
        elementTag.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, attributeKeys.join(","));
    }
};

var updateTags = function updateTags(type, tags) {
    var headElement = document.head || document.querySelector(_HelmetConstants.TAG_NAMES.HEAD);
    var tagNodes = headElement.querySelectorAll(type + "[" + _HelmetConstants.HELMET_ATTRIBUTE + "]");
    var oldTags = Array.prototype.slice.call(tagNodes);
    var newTags = [];
    var indexToDelete = void 0;

    if (tags && tags.length) {
        tags.forEach(function (tag) {
            var newElement = document.createElement(type);

            for (var attribute in tag) {
                if (tag.hasOwnProperty(attribute)) {
                    if (attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML) {
                        newElement.innerHTML = tag.innerHTML;
                    } else if (attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {
                        if (newElement.styleSheet) {
                            newElement.styleSheet.cssText = tag.cssText;
                        } else {
                            newElement.appendChild(document.createTextNode(tag.cssText));
                        }
                    } else {
                        var value = typeof tag[attribute] === "undefined" ? "" : tag[attribute];
                        newElement.setAttribute(attribute, value);
                    }
                }
            }

            newElement.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, "true");

            // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.
            if (oldTags.some(function (existingTag, index) {
                indexToDelete = index;
                return newElement.isEqualNode(existingTag);
            })) {
                oldTags.splice(indexToDelete, 1);
            } else {
                newTags.push(newElement);
            }
        });
    }

    oldTags.forEach(function (tag) {
        return tag.parentNode.removeChild(tag);
    });
    newTags.forEach(function (tag) {
        return headElement.appendChild(tag);
    });

    return {
        oldTags: oldTags,
        newTags: newTags
    };
};

var generateElementAttributesAsString = function generateElementAttributesAsString(attributes) {
    return Object.keys(attributes).reduce(function (str, key) {
        var attr = typeof attributes[key] !== "undefined" ? key + "=\"" + attributes[key] + "\"" : "" + key;
        return str ? str + " " + attr : attr;
    }, "");
};

var generateTitleAsString = function generateTitleAsString(type, title, attributes, encode) {
    var attributeString = generateElementAttributesAsString(attributes);
    var flattenedTitle = flattenArray(title);
    return attributeString ? "<" + type + " " + _HelmetConstants.HELMET_ATTRIBUTE + "=\"true\" " + attributeString + ">" + encodeSpecialCharacters(flattenedTitle, encode) + "</" + type + ">" : "<" + type + " " + _HelmetConstants.HELMET_ATTRIBUTE + "=\"true\">" + encodeSpecialCharacters(flattenedTitle, encode) + "</" + type + ">";
};

var generateTagsAsString = function generateTagsAsString(type, tags, encode) {
    return tags.reduce(function (str, tag) {
        var attributeHtml = Object.keys(tag).filter(function (attribute) {
            return !(attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT);
        }).reduce(function (string, attribute) {
            var attr = typeof tag[attribute] === "undefined" ? attribute : attribute + "=\"" + encodeSpecialCharacters(tag[attribute], encode) + "\"";
            return string ? string + " " + attr : attr;
        }, "");

        var tagContent = tag.innerHTML || tag.cssText || "";

        var isSelfClosing = _HelmetConstants.SELF_CLOSING_TAGS.indexOf(type) === -1;

        return str + "<" + type + " " + _HelmetConstants.HELMET_ATTRIBUTE + "=\"true\" " + attributeHtml + (isSelfClosing ? "/>" : ">" + tagContent + "</" + type + ">");
    }, "");
};

var convertElementAttributestoReactProps = function convertElementAttributestoReactProps(attributes) {
    var initProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    return Object.keys(attributes).reduce(function (obj, key) {
        obj[_HelmetConstants.REACT_TAG_MAP[key] || key] = attributes[key];
        return obj;
    }, initProps);
};

var convertReactPropstoHtmlAttributes = function convertReactPropstoHtmlAttributes(props) {
    var initAttributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    return Object.keys(props).reduce(function (obj, key) {
        obj[_HelmetConstants.HTML_TAG_MAP[key] || key] = props[key];
        return obj;
    }, initAttributes);
};

var generateTitleAsReactComponent = function generateTitleAsReactComponent(type, title, attributes) {
    var _initProps;

    // assigning into an array to define toString function on it
    var initProps = (_initProps = {
        key: title
    }, _initProps[_HelmetConstants.HELMET_ATTRIBUTE] = true, _initProps);
    var props = convertElementAttributestoReactProps(attributes, initProps);

    return [_react2.default.createElement(_HelmetConstants.TAG_NAMES.TITLE, props, title)];
};

var generateTagsAsReactComponent = function generateTagsAsReactComponent(type, tags) {
    return tags.map(function (tag, i) {
        var _mappedTag;

        var mappedTag = (_mappedTag = {
            key: i
        }, _mappedTag[_HelmetConstants.HELMET_ATTRIBUTE] = true, _mappedTag);

        Object.keys(tag).forEach(function (attribute) {
            var mappedAttribute = _HelmetConstants.REACT_TAG_MAP[attribute] || attribute;

            if (mappedAttribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || mappedAttribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {
                var content = tag.innerHTML || tag.cssText;
                mappedTag.dangerouslySetInnerHTML = { __html: content };
            } else {
                mappedTag[mappedAttribute] = tag[attribute];
            }
        });

        return _react2.default.createElement(type, mappedTag);
    });
};

var getMethodsForTag = function getMethodsForTag(type, tags, encode) {
    switch (type) {
        case _HelmetConstants.TAG_NAMES.TITLE:
            return {
                toComponent: function toComponent() {
                    return generateTitleAsReactComponent(type, tags.title, tags.titleAttributes, encode);
                },
                toString: function toString() {
                    return generateTitleAsString(type, tags.title, tags.titleAttributes, encode);
                }
            };
        case _HelmetConstants.ATTRIBUTE_NAMES.BODY:
        case _HelmetConstants.ATTRIBUTE_NAMES.HTML:
            return {
                toComponent: function toComponent() {
                    return convertElementAttributestoReactProps(tags);
                },
                toString: function toString() {
                    return generateElementAttributesAsString(tags);
                }
            };
        default:
            return {
                toComponent: function toComponent() {
                    return generateTagsAsReactComponent(type, tags);
                },
                toString: function toString() {
                    return generateTagsAsString(type, tags, encode);
                }
            };
    }
};

var mapStateOnServer = function mapStateOnServer(_ref) {
    var baseTag = _ref.baseTag,
        bodyAttributes = _ref.bodyAttributes,
        encode = _ref.encode,
        htmlAttributes = _ref.htmlAttributes,
        linkTags = _ref.linkTags,
        metaTags = _ref.metaTags,
        noscriptTags = _ref.noscriptTags,
        scriptTags = _ref.scriptTags,
        styleTags = _ref.styleTags,
        _ref$title = _ref.title,
        title = _ref$title === undefined ? "" : _ref$title,
        titleAttributes = _ref.titleAttributes;
    return {
        base: getMethodsForTag(_HelmetConstants.TAG_NAMES.BASE, baseTag, encode),
        bodyAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.BODY, bodyAttributes, encode),
        htmlAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.HTML, htmlAttributes, encode),
        link: getMethodsForTag(_HelmetConstants.TAG_NAMES.LINK, linkTags, encode),
        meta: getMethodsForTag(_HelmetConstants.TAG_NAMES.META, metaTags, encode),
        noscript: getMethodsForTag(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags, encode),
        script: getMethodsForTag(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags, encode),
        style: getMethodsForTag(_HelmetConstants.TAG_NAMES.STYLE, styleTags, encode),
        title: getMethodsForTag(_HelmetConstants.TAG_NAMES.TITLE, { title: title, titleAttributes: titleAttributes }, encode)
    };
};

exports.convertReactPropstoHtmlAttributes = convertReactPropstoHtmlAttributes;
exports.handleClientStateChange = handleClientStateChange;
exports.mapStateOnServer = mapStateOnServer;
exports.reducePropsToState = reducePropsToState;
exports.requestAnimationFrame = requestAnimationFrame;
exports.warn = warn;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(37)))

/***/ }),

/***/ 527:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Form = __webpack_require__(528);
var React = __webpack_require__(1);
var ReactHelmet = __webpack_require__(28);

var Helmet = ReactHelmet.Helmet;

var ContactPage = function (_React$Component) {
    _inherits(ContactPage, _React$Component);

    function ContactPage() {
        _classCallCheck(this, ContactPage);

        return _possibleConstructorReturn(this, (ContactPage.__proto__ || Object.getPrototypeOf(ContactPage)).apply(this, arguments));
    }

    _createClass(ContactPage, [{
        key: 'render',
        value: function render() {

            return React.createElement(
                'section',
                { className: 'section-contact container' },
                React.createElement(
                    Helmet,
                    null,
                    React.createElement(
                        'title',
                        null,
                        'Contact us'
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'row' },
                    React.createElement(
                        'div',
                        { className: 'col-sm-6' },
                        React.createElement(Form, null)
                    ),
                    React.createElement(
                        'div',
                        { className: 'col-sm-6 text-center' },
                        React.createElement(
                            'h1',
                            { className: 'page-header' },
                            'Contact us'
                        ),
                        React.createElement(
                            'p',
                            { className: 'lead' },
                            'Freddy can\u2019t wait to hear from you.'
                        ),
                        React.createElement('i', { className: 'fa fa-reply-all bamf' }),
                        React.createElement(
                            'div',
                            null,
                            '1428 Elm Street \u2022 San Francisco, CA 94122'
                        )
                    )
                )
            );
        }
    }]);

    return ContactPage;
}(React.Component);

module.exports = ContactPage;

/***/ }),

/***/ 528:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Actions = __webpack_require__(529);
var Alert = __webpack_require__(13);
var Button = __webpack_require__(12);
var ControlGroup = __webpack_require__(8);
var React = __webpack_require__(1);
var Spinner = __webpack_require__(10);
var Store = __webpack_require__(279);
var TextControl = __webpack_require__(11);
var TextareaControl = __webpack_require__(530);

var Form = function (_React$Component) {
    _inherits(Form, _React$Component);

    function Form(props) {
        _classCallCheck(this, Form);

        var _this = _possibleConstructorReturn(this, (Form.__proto__ || Object.getPrototypeOf(Form)).call(this, props));

        _this.input = {};
        _this.state = Store.getState();
        return _this;
    }

    _createClass(Form, [{
        key: 'componentDidMount',
        value: function componentDidMount() {

            this.unsubscribeStore = Store.subscribe(this.onStoreChange.bind(this));

            if (this.input.name) {
                this.input.name.focus();
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {

            this.unsubscribeStore();
        }
    }, {
        key: 'onStoreChange',
        value: function onStoreChange() {

            this.setState(Store.getState());
        }
    }, {
        key: 'handleSubmit',
        value: function handleSubmit(event) {

            event.preventDefault();
            event.stopPropagation();

            Actions.sendMessage({
                name: this.input.name.value(),
                email: this.input.email.value(),
                message: this.input.message.value()
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var alert = [];

            if (this.state.success) {
                alert = React.createElement(Alert, {
                    type: 'success',
                    message: 'Success. We have received your message.'
                });
            } else if (this.state.error) {
                alert = React.createElement(Alert, {
                    type: 'danger',
                    message: this.state.error
                });
            }

            var formElements = void 0;

            if (!this.state.success) {
                formElements = React.createElement(
                    'fieldset',
                    null,
                    React.createElement(TextControl, {
                        ref: function ref(c) {
                            return _this2.input.name = c;
                        },
                        name: 'name',
                        label: 'Your name',
                        hasError: this.state.hasError.name,
                        help: this.state.help.name,
                        disabled: this.state.loading
                    }),
                    React.createElement(TextControl, {
                        ref: function ref(c) {
                            return _this2.input.email = c;
                        },
                        name: 'email',
                        label: 'Your email',
                        hasError: this.state.hasError.email,
                        help: this.state.help.email,
                        disabled: this.state.loading
                    }),
                    React.createElement(TextareaControl, {
                        ref: function ref(c) {
                            return _this2.input.message = c;
                        },
                        name: 'message',
                        label: 'Message',
                        rows: '5',
                        hasError: this.state.hasError.message,
                        help: this.state.help.message,
                        disabled: this.state.loading
                    }),
                    React.createElement(
                        ControlGroup,
                        { hideLabel: true, hideHelp: true },
                        React.createElement(
                            Button,
                            {
                                type: 'submit',
                                inputClasses: { 'btn-primary': true },
                                disabled: this.state.loading },
                            'Send message',
                            React.createElement(Spinner, { space: 'left', show: this.state.loading })
                        )
                    )
                );
            }

            return React.createElement(
                'section',
                null,
                React.createElement(
                    'h1',
                    { className: 'page-header' },
                    'Send a message'
                ),
                React.createElement(
                    'form',
                    { onSubmit: this.handleSubmit.bind(this) },
                    alert,
                    formElements
                )
            );
        }
    }]);

    return Form;
}(React.Component);

module.exports = Form;

/***/ }),

/***/ 529:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ApiActions = __webpack_require__(18);
var Constants = __webpack_require__(278);
var Store = __webpack_require__(279);

var Actions = function () {
    function Actions() {
        _classCallCheck(this, Actions);
    }

    _createClass(Actions, null, [{
        key: 'sendMessage',
        value: function sendMessage(data) {

            ApiActions.post('/api/contact', data, Store, Constants.SEND_MESSAGE, Constants.SEND_MESSAGE_RESPONSE);
        }
    }]);

    return Actions;
}();

module.exports = Actions;

/***/ }),

/***/ 530:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ClassNames = __webpack_require__(25);
var ControlGroup = __webpack_require__(8);
var ObjectAssign = __webpack_require__(3);
var PropTypes = __webpack_require__(2);
var React = __webpack_require__(1);

var propTypes = {
    disabled: PropTypes.bool,
    hasError: PropTypes.bool,
    help: PropTypes.string,
    inputClasses: PropTypes.object,
    label: PropTypes.string,
    name: PropTypes.string,
    onChange: PropTypes.func,
    placeholder: PropTypes.string,
    rows: PropTypes.string,
    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
};

var TextareaControl = function (_React$Component) {
    _inherits(TextareaControl, _React$Component);

    function TextareaControl() {
        _classCallCheck(this, TextareaControl);

        return _possibleConstructorReturn(this, (TextareaControl.__proto__ || Object.getPrototypeOf(TextareaControl)).apply(this, arguments));
    }

    _createClass(TextareaControl, [{
        key: 'focus',
        value: function focus() {

            return this.input.focus();
        }
    }, {
        key: 'value',
        value: function value() {

            return this.input.value;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var inputClasses = ClassNames(ObjectAssign({
                'form-control': true
            }, this.props.inputClasses));

            return React.createElement(
                ControlGroup,
                {
                    hasError: this.props.hasError,
                    label: this.props.label,
                    help: this.props.help },
                React.createElement('textarea', {
                    ref: function ref(c) {
                        return _this2.input = c;
                    },
                    className: inputClasses,
                    name: this.props.name,
                    rows: this.props.rows,
                    placeholder: this.props.placeholder,
                    value: this.props.value,
                    disabled: this.props.disabled ? 'disabled' : undefined,
                    onChange: this.props.onChange
                })
            );
        }
    }]);

    return TextareaControl;
}(React.Component);

TextareaControl.propTypes = propTypes;

module.exports = TextareaControl;

/***/ }),

/***/ 531:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = __webpack_require__(1);
var ReactRouter = __webpack_require__(7);

var Link = ReactRouter.Link;

var Footer = function (_React$Component) {
    _inherits(Footer, _React$Component);

    function Footer() {
        _classCallCheck(this, Footer);

        return _possibleConstructorReturn(this, (Footer.__proto__ || Object.getPrototypeOf(Footer)).apply(this, arguments));
    }

    _createClass(Footer, [{
        key: 'render',
        value: function render() {

            var year = new Date().getFullYear();

            return React.createElement(
                'div',
                { className: 'footer' },
                React.createElement(
                    'div',
                    { className: 'container' },
                    React.createElement(
                        'span',
                        { className: 'copyright pull-right' },
                        '\xA9 ',
                        year,
                        ' Acme, Inc.'
                    ),
                    React.createElement(
                        'ul',
                        { className: 'links' },
                        React.createElement(
                            'li',
                            null,
                            React.createElement(
                                Link,
                                { to: '/' },
                                'Home'
                            )
                        ),
                        React.createElement(
                            'li',
                            null,
                            React.createElement(
                                Link,
                                { to: '/contact' },
                                'Contact'
                            )
                        )
                    ),
                    React.createElement('div', { className: 'clearfix' })
                )
            );
        }
    }]);

    return Footer;
}(React.Component);

module.exports = Footer;

/***/ }),

/***/ 532:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = __webpack_require__(1);
var ReactHelmet = __webpack_require__(28);
var ReactRouter = __webpack_require__(7);

var Helmet = ReactHelmet.Helmet;
var Link = ReactRouter.Link;

var HomePage = function (_React$Component) {
    _inherits(HomePage, _React$Component);

    function HomePage() {
        _classCallCheck(this, HomePage);

        return _possibleConstructorReturn(this, (HomePage.__proto__ || Object.getPrototypeOf(HomePage)).apply(this, arguments));
    }

    _createClass(HomePage, [{
        key: 'render',
        value: function render() {

            return React.createElement(
                'section',
                { className: 'section-home container' },
                React.createElement(
                    Helmet,
                    null,
                    React.createElement(
                        'title',
                        null,
                        'Aqua'
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'jumbotron' },
                    React.createElement(
                        'h1',
                        null,
                        'Success'
                    ),
                    React.createElement(
                        'p',
                        { className: 'lead' },
                        'Your website and user system is ready.'
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'row' },
                    React.createElement(
                        'div',
                        { className: 'col-sm-4' },
                        React.createElement(
                            'div',
                            { className: 'panel panel-default' },
                            React.createElement(
                                'div',
                                { className: 'panel-heading' },
                                React.createElement(
                                    'h3',
                                    { className: 'panel-title' },
                                    'About us'
                                )
                            ),
                            React.createElement(
                                'div',
                                { className: 'panel-body' },
                                React.createElement(
                                    'p',
                                    null,
                                    'Bicycle rights jean shorts la croix vexillologist hell of kitsch. Photo booth craft beer fixie raw denim hot chicken. Pickled adaptogen sartorial brooklyn tilde bay area.'
                                ),
                                React.createElement(
                                    Link,
                                    { to: '/about', className: 'btn btn-info btn-block' },
                                    'Learn more'
                                )
                            )
                        )
                    ),
                    React.createElement(
                        'div',
                        { className: 'col-sm-4' },
                        React.createElement(
                            'div',
                            { className: 'panel panel-default' },
                            React.createElement(
                                'div',
                                { className: 'panel-heading' },
                                React.createElement(
                                    'h3',
                                    { className: 'panel-title' },
                                    'Sign up'
                                )
                            ),
                            React.createElement(
                                'div',
                                { className: 'panel-body' },
                                React.createElement(
                                    'p',
                                    null,
                                    'Health goth skateboard tousled umami, tofu squid organic freegan +1 keytar brunch post-ironic. Copper mug selfies tattooed chicharrones short ribs yolo cardigan.'
                                ),
                                React.createElement(
                                    Link,
                                    { to: '/signup', className: 'btn btn-success btn-block' },
                                    'Learn more'
                                )
                            )
                        )
                    ),
                    React.createElement(
                        'div',
                        { className: 'col-sm-4' },
                        React.createElement(
                            'div',
                            { className: 'panel panel-default' },
                            React.createElement(
                                'div',
                                { className: 'panel-heading' },
                                React.createElement(
                                    'h3',
                                    { className: 'panel-title' },
                                    'Contact us'
                                )
                            ),
                            React.createElement(
                                'div',
                                { className: 'panel-body' },
                                React.createElement(
                                    'p',
                                    null,
                                    'Roof party readymade tote bag hot chicken blog. Fam readymade raclette hella quinoa. Cred pour-over yuccie williamsburg shabby chic ramps chartreuse messenger bag.'
                                ),
                                React.createElement(
                                    Link,
                                    { to: '/contact', className: 'btn btn-warning btn-block' },
                                    'Learn more'
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return HomePage;
}(React.Component);

module.exports = HomePage;

/***/ }),

/***/ 533:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Actions = __webpack_require__(182);
var Button = __webpack_require__(12);
var ControlGroup = __webpack_require__(8);
var React = __webpack_require__(1);
var ReactHelmet = __webpack_require__(28);
var ReactRouter = __webpack_require__(7);
var Spinner = __webpack_require__(10);
var Store = __webpack_require__(281);
var TextControl = __webpack_require__(11);

var Helmet = ReactHelmet.Helmet;
var Link = ReactRouter.Link;

var LoginPage = function (_React$Component) {
    _inherits(LoginPage, _React$Component);

    function LoginPage(props) {
        _classCallCheck(this, LoginPage);

        var _this = _possibleConstructorReturn(this, (LoginPage.__proto__ || Object.getPrototypeOf(LoginPage)).call(this, props));

        Actions.getUserCreds();

        _this.input = {};
        _this.state = Store.getState();
        return _this;
    }

    _createClass(LoginPage, [{
        key: 'componentDidMount',
        value: function componentDidMount() {

            this.unsubscribeStore = Store.subscribe(this.onStoreChange.bind(this));

            if (this.input.username) {
                this.input.username.focus();
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {

            this.unsubscribeStore();
        }
    }, {
        key: 'onStoreChange',
        value: function onStoreChange() {

            this.setState(Store.getState());
        }
    }, {
        key: 'handleSubmit',
        value: function handleSubmit(event) {

            event.preventDefault();
            event.stopPropagation();

            Actions.login({
                username: this.input.username.value(),
                password: this.input.password.value()
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var alerts = [];

            if (this.state.success) {
                alerts.push(React.createElement(
                    'div',
                    { key: 'success', className: 'alert alert-success' },
                    'Success. Redirecting...'
                ));
            }

            if (this.state.error) {
                alerts.push(React.createElement(
                    'div',
                    { key: 'danger', className: 'alert alert-danger' },
                    this.state.error
                ));
            }

            var formElements = void 0;

            if (!this.state.success) {
                formElements = React.createElement(
                    'fieldset',
                    null,
                    React.createElement(TextControl, {
                        ref: function ref(c) {
                            return _this2.input.username = c;
                        },
                        name: 'username',
                        label: 'Username or email',
                        hasError: this.state.hasError.username,
                        help: this.state.help.username,
                        disabled: this.state.loading
                    }),
                    React.createElement(TextControl, {
                        ref: function ref(c) {
                            return _this2.input.password = c;
                        },
                        name: 'password',
                        label: 'Password',
                        type: 'password',
                        hasError: this.state.hasError.password,
                        help: this.state.help.password,
                        disabled: this.state.loading
                    }),
                    React.createElement(
                        ControlGroup,
                        { hideLabel: true, hideHelp: true },
                        React.createElement(
                            Button,
                            {
                                type: 'submit',
                                inputClasses: { 'btn-primary': true },
                                disabled: this.state.loading },
                            'Sign in',
                            React.createElement(Spinner, { space: 'left', show: this.state.loading })
                        ),
                        React.createElement(
                            Link,
                            { to: '/login/forgot', className: 'btn btn-link' },
                            'Forgot your password?'
                        )
                    )
                );
            }

            return React.createElement(
                'section',
                { className: 'container' },
                React.createElement(
                    Helmet,
                    null,
                    React.createElement(
                        'title',
                        null,
                        'Sign in'
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'container' },
                    React.createElement(
                        'h1',
                        { className: 'page-header' },
                        'Sign in'
                    ),
                    React.createElement(
                        'div',
                        { className: 'row' },
                        React.createElement(
                            'div',
                            { className: 'col-sm-6' },
                            React.createElement(
                                'form',
                                { onSubmit: this.handleSubmit.bind(this) },
                                alerts,
                                formElements
                            )
                        )
                    )
                )
            );
        }
    }]);

    return LoginPage;
}(React.Component);

module.exports = LoginPage;

/***/ }),

/***/ 534:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Actions = __webpack_require__(182);
var Button = __webpack_require__(12);
var ControlGroup = __webpack_require__(8);
var React = __webpack_require__(1);
var ReactHelmet = __webpack_require__(28);
var ReactRouter = __webpack_require__(7);
var Spinner = __webpack_require__(10);
var Store = __webpack_require__(280);
var TextControl = __webpack_require__(11);

var Helmet = ReactHelmet.Helmet;
var Link = ReactRouter.Link;

var ForgotPage = function (_React$Component) {
    _inherits(ForgotPage, _React$Component);

    function ForgotPage(props) {
        _classCallCheck(this, ForgotPage);

        var _this = _possibleConstructorReturn(this, (ForgotPage.__proto__ || Object.getPrototypeOf(ForgotPage)).call(this, props));

        _this.input = {};
        _this.state = Store.getState();
        return _this;
    }

    _createClass(ForgotPage, [{
        key: 'componentDidMount',
        value: function componentDidMount() {

            this.unsubscribeStore = Store.subscribe(this.onStoreChange.bind(this));

            if (this.input.email) {
                this.input.email.focus();
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {

            this.unsubscribeStore();
        }
    }, {
        key: 'onStoreChange',
        value: function onStoreChange() {

            this.setState(Store.getState());
        }
    }, {
        key: 'handleSubmit',
        value: function handleSubmit(event) {

            event.preventDefault();
            event.stopPropagation();

            Actions.forgot({
                email: this.input.email.value()
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var alerts = [];

            if (this.state.success) {
                alerts.push(React.createElement(
                    'div',
                    { key: 'success' },
                    React.createElement(
                        'div',
                        { className: 'alert alert-success' },
                        'If an account matched that address, an email will be sent with instructions.'
                    ),
                    React.createElement(
                        Link,
                        { to: '/login', className: 'btn btn-link' },
                        'Back to login'
                    )
                ));
            }

            if (this.state.error) {
                alerts.push(React.createElement(
                    'div',
                    { key: 'danger', className: 'alert alert-danger' },
                    this.state.error
                ));
            }

            var formElements = void 0;

            if (!this.state.success) {
                formElements = React.createElement(
                    'fieldset',
                    null,
                    React.createElement(TextControl, {
                        ref: function ref(c) {
                            return _this2.input.email = c;
                        },
                        name: 'email',
                        label: 'What\'s your email?',
                        hasError: this.state.hasError.email,
                        help: this.state.help.email,
                        disabled: this.state.loading
                    }),
                    React.createElement(
                        ControlGroup,
                        { hideLabel: true, hideHelp: true },
                        React.createElement(
                            Button,
                            {
                                type: 'submit',
                                inputClasses: { 'btn-primary': true },
                                disabled: this.state.loading },
                            'Send reset',
                            React.createElement(Spinner, { space: 'left', show: this.state.loading })
                        ),
                        React.createElement(
                            Link,
                            { to: '/login', className: 'btn btn-link' },
                            'Back to login'
                        )
                    )
                );
            }

            return React.createElement(
                'section',
                { className: 'container' },
                React.createElement(
                    Helmet,
                    null,
                    React.createElement(
                        'title',
                        null,
                        'Forgot password'
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'container' },
                    React.createElement(
                        'h1',
                        { className: 'page-header' },
                        'Forgot your password?'
                    ),
                    React.createElement(
                        'div',
                        { className: 'row' },
                        React.createElement(
                            'div',
                            { className: 'col-sm-6' },
                            React.createElement(
                                'form',
                                { onSubmit: this.handleSubmit.bind(this) },
                                alerts,
                                formElements
                            )
                        )
                    )
                )
            );
        }
    }]);

    return ForgotPage;
}(React.Component);

module.exports = ForgotPage;

/***/ }),

/***/ 535:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Actions = __webpack_require__(182);
var React = __webpack_require__(1);
var ReactHelmet = __webpack_require__(28);
var ReactRouter = __webpack_require__(7);
var Store = __webpack_require__(282);

var Helmet = ReactHelmet.Helmet;
var Link = ReactRouter.Link;

var LogoutPage = function (_React$Component) {
    _inherits(LogoutPage, _React$Component);

    function LogoutPage(props) {
        _classCallCheck(this, LogoutPage);

        var _this = _possibleConstructorReturn(this, (LogoutPage.__proto__ || Object.getPrototypeOf(LogoutPage)).call(this, props));

        _this.input = {};
        _this.state = Store.getState();
        return _this;
    }

    _createClass(LogoutPage, [{
        key: 'componentDidMount',
        value: function componentDidMount() {

            this.unsubscribeStore = Store.subscribe(this.onStoreChange.bind(this));

            Actions.logout();
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {

            this.unsubscribeStore();
        }
    }, {
        key: 'onStoreChange',
        value: function onStoreChange() {

            this.setState(Store.getState());
        }
    }, {
        key: 'render',
        value: function render() {

            var alerts = [];

            if (this.state.success) {
                alerts.push(React.createElement(
                    'div',
                    { key: 'success', className: 'alert alert-success' },
                    'Logout successful.'
                ));
            } else if (this.state.error) {
                alerts.push(React.createElement(
                    'div',
                    { key: 'danger', className: 'alert alert-warning' },
                    this.state.error
                ));
            }

            return React.createElement(
                'section',
                { className: 'container' },
                React.createElement(
                    Helmet,
                    null,
                    React.createElement(
                        'title',
                        null,
                        'Sign out'
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'container' },
                    React.createElement(
                        'h1',
                        { className: 'page-header' },
                        'Sign out'
                    ),
                    React.createElement(
                        'div',
                        { className: 'row' },
                        React.createElement(
                            'div',
                            { className: 'col-sm-6' },
                            alerts,
                            React.createElement(
                                Link,
                                { to: '/login', className: 'btn btn-link' },
                                'Sign in again'
                            )
                        )
                    )
                )
            );
        }
    }]);

    return LogoutPage;
}(React.Component);

module.exports = LogoutPage;

/***/ }),

/***/ 536:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Actions = __webpack_require__(182);
var Button = __webpack_require__(12);
var ControlGroup = __webpack_require__(8);
var PropTypes = __webpack_require__(2);
var React = __webpack_require__(1);
var ReactHelmet = __webpack_require__(28);
var ReactRouter = __webpack_require__(7);
var Spinner = __webpack_require__(10);
var Store = __webpack_require__(283);
var TextControl = __webpack_require__(11);

var Helmet = ReactHelmet.Helmet;
var Link = ReactRouter.Link;
var propTypes = {
    match: PropTypes.object
};

var ResetPage = function (_React$Component) {
    _inherits(ResetPage, _React$Component);

    function ResetPage(props) {
        _classCallCheck(this, ResetPage);

        var _this = _possibleConstructorReturn(this, (ResetPage.__proto__ || Object.getPrototypeOf(ResetPage)).call(this, props));

        _this.input = {};
        _this.state = Store.getState();
        return _this;
    }

    _createClass(ResetPage, [{
        key: 'componentDidMount',
        value: function componentDidMount() {

            this.unsubscribeStore = Store.subscribe(this.onStoreChange.bind(this));

            if (this.input.password) {
                this.input.password.focus();
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {

            this.unsubscribeStore();
        }
    }, {
        key: 'onStoreChange',
        value: function onStoreChange() {

            this.setState(Store.getState());
        }
    }, {
        key: 'handleSubmit',
        value: function handleSubmit(event) {

            event.preventDefault();
            event.stopPropagation();

            Actions.reset({
                email: this.props.match.params.email,
                key: this.props.match.params.key,
                password: this.input.password.value()
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var alerts = [];

            if (this.state.success) {
                alerts.push(React.createElement(
                    'div',
                    { key: 'success' },
                    React.createElement(
                        'div',
                        { className: 'alert alert-success' },
                        'Your password has been reset. Please login to confirm.'
                    ),
                    React.createElement(
                        Link,
                        { to: '/login', className: 'btn btn-link' },
                        'Back to login'
                    )
                ));
            }

            if (this.state.error) {
                alerts.push(React.createElement(
                    'div',
                    { key: 'danger', className: 'alert alert-danger' },
                    this.state.error
                ));
            }

            var formElements = void 0;

            if (!this.state.success) {
                formElements = React.createElement(
                    'fieldset',
                    null,
                    React.createElement(TextControl, {
                        ref: function ref(c) {
                            return _this2.input.password = c;
                        },
                        name: 'password',
                        label: 'New password',
                        type: 'password',
                        hasError: this.state.hasError.password,
                        help: this.state.help.password,
                        disabled: this.state.loading
                    }),
                    React.createElement(TextControl, {
                        name: '_key',
                        label: 'Key',
                        hasError: this.state.hasError.key,
                        value: this.props.match.params.key,
                        help: this.state.help.key,
                        disabled: true
                    }),
                    React.createElement(TextControl, {
                        name: '_email',
                        label: 'Email',
                        hasError: this.state.hasError.email,
                        value: this.props.match.params.email,
                        help: this.state.help.email,
                        disabled: true
                    }),
                    React.createElement(
                        ControlGroup,
                        { hideLabel: true, hideHelp: true },
                        React.createElement(
                            Button,
                            {
                                type: 'submit',
                                inputClasses: { 'btn-primary': true },
                                disabled: this.state.loading },
                            'Set password',
                            React.createElement(Spinner, { space: 'left', show: this.state.loading })
                        ),
                        React.createElement(
                            Link,
                            { to: '/login', className: 'btn btn-link' },
                            'Back to login'
                        )
                    )
                );
            }

            return React.createElement(
                'section',
                { className: 'container' },
                React.createElement(
                    Helmet,
                    null,
                    React.createElement(
                        'title',
                        null,
                        'Reset password'
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'container' },
                    React.createElement(
                        'h1',
                        { className: 'page-header' },
                        'Reset your password'
                    ),
                    React.createElement(
                        'div',
                        { className: 'row' },
                        React.createElement(
                            'div',
                            { className: 'col-sm-6' },
                            React.createElement(
                                'form',
                                { onSubmit: this.handleSubmit.bind(this) },
                                alerts,
                                formElements
                            )
                        )
                    )
                )
            );
        }
    }]);

    return ResetPage;
}(React.Component);

ResetPage.propTypes = propTypes;

module.exports = ResetPage;

/***/ }),

/***/ 537:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ClassNames = __webpack_require__(25);
var PropTypes = __webpack_require__(2);
var React = __webpack_require__(1);
var ReactRouter = __webpack_require__(7);

var Link = ReactRouter.Link;
var propTypes = {
    location: PropTypes.object
};

var Navbar = function (_React$Component) {
    _inherits(Navbar, _React$Component);

    function Navbar(props) {
        _classCallCheck(this, Navbar);

        var _this = _possibleConstructorReturn(this, (Navbar.__proto__ || Object.getPrototypeOf(Navbar)).call(this, props));

        _this.state = {
            navBarOpen: false
        };
        return _this;
    }

    _createClass(Navbar, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps() {

            this.setState({ navBarOpen: false });
        }
    }, {
        key: 'isPathActive',
        value: function isPathActive(pathPattern) {

            var isActive = false;

            if (typeof pathPattern === 'string') {
                isActive = this.props.location.pathname === pathPattern;
            } else {
                isActive = this.props.location.pathname.match(pathPattern);
            }

            return ClassNames({
                active: isActive
            });
        }
    }, {
        key: 'toggleMenu',
        value: function toggleMenu() {

            this.setState({ navBarOpen: !this.state.navBarOpen });
        }
    }, {
        key: 'render',
        value: function render() {

            var navBarCollapse = ClassNames({
                'navbar-collapse': true,
                collapse: !this.state.navBarOpen
            });

            return React.createElement(
                'div',
                { className: 'navbar navbar-default navbar-fixed-top' },
                React.createElement(
                    'div',
                    { className: 'container' },
                    React.createElement(
                        'div',
                        { className: 'navbar-header' },
                        React.createElement(
                            Link,
                            { className: 'navbar-brand', to: '/' },
                            React.createElement('img', {
                                className: 'navbar-logo',
                                src: '/public/media/logo-square.png'
                            }),
                            React.createElement(
                                'span',
                                { className: 'navbar-brand-label' },
                                'Aqua'
                            )
                        ),
                        React.createElement(
                            'button',
                            {
                                className: 'navbar-toggle collapsed',
                                onClick: this.toggleMenu.bind(this) },
                            React.createElement('span', { className: 'icon-bar' }),
                            React.createElement('span', { className: 'icon-bar' }),
                            React.createElement('span', { className: 'icon-bar' })
                        )
                    ),
                    React.createElement(
                        'div',
                        { className: navBarCollapse },
                        React.createElement(
                            'ul',
                            { className: 'nav navbar-nav' },
                            React.createElement(
                                'li',
                                { className: this.isPathActive('/') },
                                React.createElement(
                                    Link,
                                    { to: '/' },
                                    'Home'
                                )
                            ),
                            React.createElement(
                                'li',
                                { className: this.isPathActive('/about') },
                                React.createElement(
                                    Link,
                                    { to: '/about' },
                                    'About'
                                )
                            ),
                            React.createElement(
                                'li',
                                { className: this.isPathActive('/signup') },
                                React.createElement(
                                    Link,
                                    { to: '/signup' },
                                    'Signup'
                                )
                            ),
                            React.createElement(
                                'li',
                                { className: this.isPathActive('/contact') },
                                React.createElement(
                                    Link,
                                    { to: '/contact' },
                                    'Contact'
                                )
                            )
                        ),
                        React.createElement(
                            'ul',
                            { className: 'nav navbar-nav navbar-right' },
                            React.createElement(
                                'li',
                                { className: this.isPathActive(/^\/login/) },
                                React.createElement(
                                    Link,
                                    { to: '/login' },
                                    React.createElement('i', { className: 'fa fa-user' }),
                                    ' Sign in'
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Navbar;
}(React.Component);

Navbar.propTypes = propTypes;

module.exports = Navbar;

/***/ }),

/***/ 538:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = __webpack_require__(1);
var ReactHelmet = __webpack_require__(28);
var RouteStatus = __webpack_require__(539);

var Helmet = ReactHelmet.Helmet;

var NotFoundPage = function (_React$Component) {
    _inherits(NotFoundPage, _React$Component);

    function NotFoundPage() {
        _classCallCheck(this, NotFoundPage);

        return _possibleConstructorReturn(this, (NotFoundPage.__proto__ || Object.getPrototypeOf(NotFoundPage)).apply(this, arguments));
    }

    _createClass(NotFoundPage, [{
        key: 'render',
        value: function render() {

            return React.createElement(
                RouteStatus,
                { code: 404 },
                React.createElement(
                    'section',
                    { className: 'container' },
                    React.createElement(
                        Helmet,
                        null,
                        React.createElement(
                            'title',
                            null,
                            'Page not found'
                        )
                    ),
                    React.createElement(
                        'h1',
                        { className: 'page-header' },
                        'Page not found'
                    ),
                    React.createElement(
                        'p',
                        null,
                        'We couldn\u2019t find the page you requested.'
                    )
                )
            );
        }
    }]);

    return NotFoundPage;
}(React.Component);

module.exports = NotFoundPage;

/***/ }),

/***/ 539:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var React = __webpack_require__(1);
var ReactRouter = __webpack_require__(7);

var Route = ReactRouter.Route;

var RouteStatus = function RouteStatus(outerProps) {

    var inline = function inline(innerProps) {

        if (innerProps.staticContext) {
            innerProps.staticContext.code = outerProps.code;
        }

        return outerProps.children;
    };

    return React.createElement(Route, { render: inline });
};

module.exports = RouteStatus;

/***/ }),

/***/ 540:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var React = __webpack_require__(1);
var ReactRouter = __webpack_require__(7);

var Redirect = ReactRouter.Redirect;
var Route = ReactRouter.Route;

var RouteRedirect = function RouteRedirect(outerProps) {

    var inline = function inline(innerProps) {

        if (innerProps.staticContext) {
            innerProps.staticContext.code = outerProps.code;
        }

        return React.createElement(Redirect, { from: outerProps.from, to: outerProps.to });
    };

    return React.createElement(Route, { render: inline });
};

module.exports = RouteRedirect;

/***/ }),

/***/ 541:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Form = __webpack_require__(542);
var React = __webpack_require__(1);
var ReactHelmet = __webpack_require__(28);

var Helmet = ReactHelmet.Helmet;

var SignupPage = function (_React$Component) {
    _inherits(SignupPage, _React$Component);

    function SignupPage() {
        _classCallCheck(this, SignupPage);

        return _possibleConstructorReturn(this, (SignupPage.__proto__ || Object.getPrototypeOf(SignupPage)).apply(this, arguments));
    }

    _createClass(SignupPage, [{
        key: 'render',
        value: function render() {

            return React.createElement(
                'section',
                { className: 'section-home container' },
                React.createElement(
                    Helmet,
                    null,
                    React.createElement(
                        'title',
                        null,
                        'Sign up'
                    )
                ),
                React.createElement(
                    'div',
                    { className: 'row' },
                    React.createElement(
                        'div',
                        { className: 'col-sm-6' },
                        React.createElement(Form, null)
                    ),
                    React.createElement(
                        'div',
                        { className: 'col-sm-6 text-center' },
                        React.createElement(
                            'h1',
                            { className: 'page-header' },
                            'Campy benefits'
                        ),
                        React.createElement(
                            'p',
                            { className: 'lead' },
                            'Really, you will love it inside. It\u2019s super great!'
                        ),
                        React.createElement('i', { className: 'fa fa-thumbs-o-up bamf' })
                    )
                )
            );
        }
    }]);

    return SignupPage;
}(React.Component);

module.exports = SignupPage;

/***/ }),

/***/ 542:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Actions = __webpack_require__(543);
var Alert = __webpack_require__(13);
var Button = __webpack_require__(12);
var ControlGroup = __webpack_require__(8);
var React = __webpack_require__(1);
var Spinner = __webpack_require__(10);
var Store = __webpack_require__(285);
var TextControl = __webpack_require__(11);

var Form = function (_React$Component) {
    _inherits(Form, _React$Component);

    function Form(props) {
        _classCallCheck(this, Form);

        var _this = _possibleConstructorReturn(this, (Form.__proto__ || Object.getPrototypeOf(Form)).call(this, props));

        _this.input = {};
        _this.state = Store.getState();
        return _this;
    }

    _createClass(Form, [{
        key: 'componentDidMount',
        value: function componentDidMount() {

            this.unsubscribeStore = Store.subscribe(this.onStoreChange.bind(this));

            if (this.input.name) {
                this.input.name.focus();
            }
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {

            this.unsubscribeStore();
        }
    }, {
        key: 'onStoreChange',
        value: function onStoreChange() {

            this.setState(Store.getState());
        }
    }, {
        key: 'handleSubmit',
        value: function handleSubmit(event) {

            event.preventDefault();
            event.stopPropagation();

            Actions.sendRequest({
                name: this.input.name.value(),
                username: this.input.username.value(),
                password: this.input.password.value(),
                email: this.input.email.value()
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var alert = [];

            if (this.state.success) {
                alert = React.createElement(Alert, {
                    type: 'success',
                    message: 'Success. Redirecting...'
                });
            } else if (this.state.error) {
                alert = React.createElement(Alert, {
                    type: 'danger',
                    message: this.state.error
                });
            }

            var formElements = void 0;

            if (!this.state.success) {
                formElements = React.createElement(
                    'fieldset',
                    null,
                    React.createElement(TextControl, {
                        ref: function ref(c) {
                            return _this2.input.name = c;
                        },
                        name: 'name',
                        label: 'Name',
                        hasError: this.state.hasError.name,
                        help: this.state.help.name,
                        disabled: this.state.loading
                    }),
                    React.createElement(TextControl, {
                        ref: function ref(c) {
                            return _this2.input.email = c;
                        },
                        name: 'email',
                        label: 'Email',
                        hasError: this.state.hasError.email,
                        help: this.state.help.email,
                        disabled: this.state.loading
                    }),
                    React.createElement(TextControl, {
                        ref: function ref(c) {
                            return _this2.input.username = c;
                        },
                        name: 'username',
                        label: 'Username',
                        hasError: this.state.hasError.username,
                        help: this.state.help.username,
                        disabled: this.state.loading
                    }),
                    React.createElement(TextControl, {
                        ref: function ref(c) {
                            return _this2.input.password = c;
                        },
                        name: 'password',
                        label: 'Password',
                        type: 'password',
                        hasError: this.state.hasError.password,
                        help: this.state.help.password,
                        disabled: this.state.loading
                    }),
                    React.createElement(
                        ControlGroup,
                        { hideLabel: true, hideHelp: true },
                        React.createElement(
                            Button,
                            {
                                type: 'submit',
                                inputClasses: { 'btn-success': true },
                                disabled: this.state.loading },
                            'Create my account',
                            React.createElement(Spinner, { space: 'left', show: this.state.loading })
                        )
                    )
                );
            }

            return React.createElement(
                'section',
                null,
                React.createElement(
                    'h1',
                    { className: 'page-header' },
                    'Sign up'
                ),
                React.createElement(
                    'form',
                    { onSubmit: this.handleSubmit.bind(this) },
                    alert,
                    formElements
                )
            );
        }
    }]);

    return Form;
}(React.Component);

module.exports = Form;

/***/ }),

/***/ 543:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* global window */


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ApiActions = __webpack_require__(18);
var Constants = __webpack_require__(284);
var Store = __webpack_require__(285);

var Actions = function () {
    function Actions() {
        _classCallCheck(this, Actions);
    }

    _createClass(Actions, null, [{
        key: 'sendRequest',
        value: function sendRequest(data) {

            ApiActions.post('/api/signup', data, Store, Constants.REGISTER, Constants.REGISTER_RESPONSE, function (err, response) {

                if (!err) {
                    window.location.href = '/account';
                }
            });
        }
    }]);

    return Actions;
}();

;

module.exports = Actions;

/***/ })

},[519]);
//# sourceMappingURL=main.min.js.map